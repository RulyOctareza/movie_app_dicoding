// Mocks generated by Mockito 5.4.6 from annotations
// in movie_app_dicoding/test/presentation/pages/tv_series_home_page_mock.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:flutter_bloc/flutter_bloc.dart' as _i10;
import 'package:mockito/mockito.dart' as _i1;
import 'package:movie_app_dicoding/domain/entities/episode.dart' as _i9;
import 'package:movie_app_dicoding/domain/entities/tv_series.dart' as _i7;
import 'package:movie_app_dicoding/domain/entities/tv_series_detail.dart'
    as _i8;
import 'package:movie_app_dicoding/domain/usecases/get_season_episodes.dart'
    as _i3;
import 'package:movie_app_dicoding/domain/usecases/tv_series_usecases.dart'
    as _i2;
import 'package:movie_app_dicoding/presentation/cubit/tv_series_list_cubit.dart'
    as _i5;
import 'package:movie_app_dicoding/presentation/cubit/tv_series_list_state.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGetPopularTvSeries_0 extends _i1.SmartFake
    implements _i2.GetPopularTvSeries {
  _FakeGetPopularTvSeries_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGetTopRatedTvSeries_1 extends _i1.SmartFake
    implements _i2.GetTopRatedTvSeries {
  _FakeGetTopRatedTvSeries_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGetNowPlayingTvSeries_2 extends _i1.SmartFake
    implements _i2.GetNowPlayingTvSeries {
  _FakeGetNowPlayingTvSeries_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSearchTvSeries_3 extends _i1.SmartFake
    implements _i2.SearchTvSeries {
  _FakeSearchTvSeries_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGetTvSeriesDetail_4 extends _i1.SmartFake
    implements _i2.GetTvSeriesDetail {
  _FakeGetTvSeriesDetail_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGetTvSeriesRecommendations_5 extends _i1.SmartFake
    implements _i2.GetTvSeriesRecommendations {
  _FakeGetTvSeriesRecommendations_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGetWatchlist_6 extends _i1.SmartFake implements _i2.GetWatchlist {
  _FakeGetWatchlist_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAddToWatchlist_7 extends _i1.SmartFake
    implements _i2.AddToWatchlist {
  _FakeAddToWatchlist_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRemoveFromWatchlist_8 extends _i1.SmartFake
    implements _i2.RemoveFromWatchlist {
  _FakeRemoveFromWatchlist_8(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeIsAddedToWatchlist_9 extends _i1.SmartFake
    implements _i2.IsAddedToWatchlist {
  _FakeIsAddedToWatchlist_9(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGetSeasonEpisodes_10 extends _i1.SmartFake
    implements _i3.GetSeasonEpisodes {
  _FakeGetSeasonEpisodes_10(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTvSeriesListState_11 extends _i1.SmartFake
    implements _i4.TvSeriesListState {
  _FakeTvSeriesListState_11(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [TvSeriesListCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvSeriesListCubit extends _i1.Mock implements _i5.TvSeriesListCubit {
  MockTvSeriesListCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GetPopularTvSeries get getPopularTvSeries =>
      (super.noSuchMethod(
            Invocation.getter(#getPopularTvSeries),
            returnValue: _FakeGetPopularTvSeries_0(
              this,
              Invocation.getter(#getPopularTvSeries),
            ),
          )
          as _i2.GetPopularTvSeries);

  @override
  _i2.GetTopRatedTvSeries get getTopRatedTvSeries =>
      (super.noSuchMethod(
            Invocation.getter(#getTopRatedTvSeries),
            returnValue: _FakeGetTopRatedTvSeries_1(
              this,
              Invocation.getter(#getTopRatedTvSeries),
            ),
          )
          as _i2.GetTopRatedTvSeries);

  @override
  _i2.GetNowPlayingTvSeries get getNowPlayingTvSeries =>
      (super.noSuchMethod(
            Invocation.getter(#getNowPlayingTvSeries),
            returnValue: _FakeGetNowPlayingTvSeries_2(
              this,
              Invocation.getter(#getNowPlayingTvSeries),
            ),
          )
          as _i2.GetNowPlayingTvSeries);

  @override
  _i2.SearchTvSeries get searchTvSeries =>
      (super.noSuchMethod(
            Invocation.getter(#searchTvSeries),
            returnValue: _FakeSearchTvSeries_3(
              this,
              Invocation.getter(#searchTvSeries),
            ),
          )
          as _i2.SearchTvSeries);

  @override
  _i2.GetTvSeriesDetail get getTvSeriesDetail =>
      (super.noSuchMethod(
            Invocation.getter(#getTvSeriesDetail),
            returnValue: _FakeGetTvSeriesDetail_4(
              this,
              Invocation.getter(#getTvSeriesDetail),
            ),
          )
          as _i2.GetTvSeriesDetail);

  @override
  _i2.GetTvSeriesRecommendations get getTvSeriesRecommendations =>
      (super.noSuchMethod(
            Invocation.getter(#getTvSeriesRecommendations),
            returnValue: _FakeGetTvSeriesRecommendations_5(
              this,
              Invocation.getter(#getTvSeriesRecommendations),
            ),
          )
          as _i2.GetTvSeriesRecommendations);

  @override
  _i2.GetWatchlist get getWatchlist =>
      (super.noSuchMethod(
            Invocation.getter(#getWatchlist),
            returnValue: _FakeGetWatchlist_6(
              this,
              Invocation.getter(#getWatchlist),
            ),
          )
          as _i2.GetWatchlist);

  @override
  _i2.AddToWatchlist get addToWatchlistUsecase =>
      (super.noSuchMethod(
            Invocation.getter(#addToWatchlistUsecase),
            returnValue: _FakeAddToWatchlist_7(
              this,
              Invocation.getter(#addToWatchlistUsecase),
            ),
          )
          as _i2.AddToWatchlist);

  @override
  _i2.RemoveFromWatchlist get removeFromWatchlistUsecase =>
      (super.noSuchMethod(
            Invocation.getter(#removeFromWatchlistUsecase),
            returnValue: _FakeRemoveFromWatchlist_8(
              this,
              Invocation.getter(#removeFromWatchlistUsecase),
            ),
          )
          as _i2.RemoveFromWatchlist);

  @override
  _i2.IsAddedToWatchlist get isAddedToWatchlistUsecase =>
      (super.noSuchMethod(
            Invocation.getter(#isAddedToWatchlistUsecase),
            returnValue: _FakeIsAddedToWatchlist_9(
              this,
              Invocation.getter(#isAddedToWatchlistUsecase),
            ),
          )
          as _i2.IsAddedToWatchlist);

  @override
  _i3.GetSeasonEpisodes get getSeasonEpisodesUsecase =>
      (super.noSuchMethod(
            Invocation.getter(#getSeasonEpisodesUsecase),
            returnValue: _FakeGetSeasonEpisodes_10(
              this,
              Invocation.getter(#getSeasonEpisodesUsecase),
            ),
          )
          as _i3.GetSeasonEpisodes);

  @override
  _i4.TvSeriesListState get state =>
      (super.noSuchMethod(
            Invocation.getter(#state),
            returnValue: _FakeTvSeriesListState_11(
              this,
              Invocation.getter(#state),
            ),
          )
          as _i4.TvSeriesListState);

  @override
  _i6.Stream<_i4.TvSeriesListState> get stream =>
      (super.noSuchMethod(
            Invocation.getter(#stream),
            returnValue: _i6.Stream<_i4.TvSeriesListState>.empty(),
          )
          as _i6.Stream<_i4.TvSeriesListState>);

  @override
  bool get isClosed =>
      (super.noSuchMethod(Invocation.getter(#isClosed), returnValue: false)
          as bool);

  @override
  _i6.Future<void> fetchAll() =>
      (super.noSuchMethod(
            Invocation.method(#fetchAll, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<List<_i7.TvSeries>> search(String? query) =>
      (super.noSuchMethod(
            Invocation.method(#search, [query]),
            returnValue: _i6.Future<List<_i7.TvSeries>>.value(<_i7.TvSeries>[]),
          )
          as _i6.Future<List<_i7.TvSeries>>);

  @override
  _i6.Future<dynamic> getDetail(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getDetail, [id]),
            returnValue: _i6.Future<dynamic>.value(),
          )
          as _i6.Future<dynamic>);

  @override
  _i6.Future<dynamic> getRecommendations(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getRecommendations, [id]),
            returnValue: _i6.Future<dynamic>.value(),
          )
          as _i6.Future<dynamic>);

  @override
  _i6.Future<List<_i7.TvSeries>> getWatchlistList() =>
      (super.noSuchMethod(
            Invocation.method(#getWatchlistList, []),
            returnValue: _i6.Future<List<_i7.TvSeries>>.value(<_i7.TvSeries>[]),
          )
          as _i6.Future<List<_i7.TvSeries>>);

  @override
  _i6.Future<void> addToWatchlist(_i8.TvSeriesDetail? detail) =>
      (super.noSuchMethod(
            Invocation.method(#addToWatchlist, [detail]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> removeFromWatchlist(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#removeFromWatchlist, [id]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<bool> isAddedToWatchlist(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#isAddedToWatchlist, [id]),
            returnValue: _i6.Future<bool>.value(false),
          )
          as _i6.Future<bool>);

  @override
  _i6.Future<List<_i9.Episode>> getSeasonEpisodes(
    int? tvId,
    int? seasonNumber,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getSeasonEpisodes, [tvId, seasonNumber]),
            returnValue: _i6.Future<List<_i9.Episode>>.value(<_i9.Episode>[]),
          )
          as _i6.Future<List<_i9.Episode>>);

  @override
  void emit(_i4.TvSeriesListState? state) => super.noSuchMethod(
    Invocation.method(#emit, [state]),
    returnValueForMissingStub: null,
  );

  @override
  void onChange(_i10.Change<_i4.TvSeriesListState>? change) =>
      super.noSuchMethod(
        Invocation.method(#onChange, [change]),
        returnValueForMissingStub: null,
      );

  @override
  void addError(Object? error, [StackTrace? stackTrace]) => super.noSuchMethod(
    Invocation.method(#addError, [error, stackTrace]),
    returnValueForMissingStub: null,
  );

  @override
  void onError(Object? error, StackTrace? stackTrace) => super.noSuchMethod(
    Invocation.method(#onError, [error, stackTrace]),
    returnValueForMissingStub: null,
  );

  @override
  _i6.Future<void> close() =>
      (super.noSuchMethod(
            Invocation.method(#close, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);
}
